{"ast":null,"code":"import * as __NgCli_bootstrap_1 from \"@angular/platform-browser\";\nimport { AppModule } from './app/app.module';\n__NgCli_bootstrap_1.platformBrowser().bootstrapModule(AppModule).catch(err => console.error(err));\nexport function pathArrayToDirStructure(files) {\n  let root = {};\n  files.forEach(file => {\n    let path = file.split(\"/\");\n    let fNamearr = path.splice(path.length - 1);\n    let fName = fNamearr[0];\n    let dir = root;\n    path.forEach(pEl => {\n      let newDir = root[pEl];\n      if (typeof newDir == \"object\") {\n        dir = newDir;\n      } else if (!newDir) {\n        newDir = {};\n        dir[pEl] = newDir;\n        dir = newDir;\n      }\n    });\n    dir[fName] = \"file\";\n    root[file] = \"file\";\n  });\n  return {};\n}","map":{"version":3,"mappings":";AAEA,SAASA,SAAS,QAAQ,kBAAkB;AAG5CC,qCAAwB,CAACC,eAAe,CAACF,SAAS,CAAC,CAChDG,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CAAC;AAQnC,OAAM,SAAUG,uBAAuB,CAACC,KAAc;EACpD,IAAIC,IAAI,GAAgB,EAAE;EAE1BD,KAAK,CAACE,OAAO,CACXC,IAAI,IAAG;IACL,IAAIC,IAAI,GAAGD,IAAI,CAACE,KAAK,CAAC,GAAG,CAAC;IAC1B,IAAIC,QAAQ,GAAGF,IAAI,CAACG,MAAM,CAACH,IAAI,CAACI,MAAM,GAAG,CAAC,CAAC;IAC3C,IAAIC,KAAK,GAAGH,QAAQ,CAAC,CAAC,CAAC;IAEvB,IAAII,GAAG,GAAGT,IAAI;IACdG,IAAI,CAACF,OAAO,CAAES,GAAG,IAAG;MAClB,IAAIC,MAAM,GAAGX,IAAI,CAACU,GAAG,CAAC;MACtB,IAAI,OAAOC,MAAM,IAAI,QAAQ,EAAE;QAC7BF,GAAG,GAAGE,MAAM;OACb,MACI,IAAI,CAACA,MAAM,EAAE;QAChBA,MAAM,GAAG,EAAE;QACXF,GAAG,CAACC,GAAG,CAAC,GAAGC,MAAM;QACjBF,GAAG,GAAGE,MAAM;;IAEhB,CAAC,CAAC;IACFF,GAAG,CAACD,KAAK,CAAC,GAAG,MAAM;IACnBR,IAAI,CAACE,IAAI,CAAC,GAAG,MAAM;EACrB,CAAC,CACF;EACD,OAAO,EAAE;AACX","names":["AppModule","__NgCli_bootstrap_1","bootstrapModule","catch","err","console","error","pathArrayToDirStructure","files","root","forEach","file","path","split","fNamearr","splice","length","fName","dir","pEl","newDir"],"sourceRoot":"","sources":["/Users/santiago/go/cen3031-project/src/main.ts"],"sourcesContent":["import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n\ntype myFile = string;\ntype myDirectory = {\n  [name:string] : myFile | myDirectory\n}\n\nexport function pathArrayToDirStructure(files:string[]) : myDirectory {\n  let root: myDirectory = {}\n\n  files.forEach(\n    file => {\n      let path = file.split(\"/\");\n      let fNamearr = path.splice(path.length - 1);\n      let fName = fNamearr[0];\n\n      let dir = root;\n      path.forEach( pEl => {\n        let newDir = root[pEl];\n        if (typeof newDir == \"object\") {\n          dir = newDir\n        }\n        else if (!newDir) {\n          newDir = {};\n          dir[pEl] = newDir;\n          dir = newDir;\n        }\n      })\n      dir[fName] = \"file\";\n      root[file] = \"file\"\n    }\n  )\n  return {}\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}